setwd("~/Desktop/TMHG535/TMHG535_modelling")
#read data set
data <- read.csv("data_week0.csv")
View(data)
#plot X and Y coordinates
plot(x= data$X, y= data$Y)
#perform linear regression model
linear1 <- lm(Y~X,data)
linear1$fitted.values
plot(linear1$fitted.values)
#perform linear regression model
linear1 <- lm(Y~X,data)
fitted(linear1)
View(data)
line(fitted(linear1))
lines(fitted(linear1))
#plot X and Y coordinates
plot(x= data$X, y= data$Y)
#perform linear regression model
linear1 <- lm(Y~X,data)
fitted_model <-fitted(linear1)
lines(fitted_model)
lines(data$X,fitted_model)
#plot X and Y coordinates
plot(x= data$X, y= data$Y)
#perform linear regression model
linear1 <- lm(Y~X,data)
fitted_model <-fitted(linear1)
lines(data$X,fitted_model)
new.point <- NULL  # define new point array
for (i in 1:5){  # iterate for 5 time
new.point[i] <- runif(1,1,3000) #add a random point(between 1-3,000) from number generator function(uniform distribution)
points(101,new.point[i],col=i,pch=3) #add point to plot
new.data <- rbind(data,c(101,new.point[i]))
new.linear <- lm(Y~X,new.data)
lines(new.data$X,new.linear$fitted.values,col=i)
}
View(data)
setwd("~/Desktop/Thesis_work/R_programming")
install.packages("deSolve")
setwd("~/Desktop/TMHG535/TMHG535_modelling")
getwd()
t1 <- seq(0,5,0.1)
plot(t1,20*exp(t1),type='l', xlab="time",ylab="population")
lines(t1,exp(2*t1),col='red')
t2 <-seq(0,20,0.1)
p1 <- 100*exp(0.1*t2)
p2 <- 1*exp(0.4*t2)
p2
plot(t2,p1,type='l',ylim=c(0,500), xlab="time",ylab="population")
lines(t2,p2,col='red')
logistic <- function(r,K,N0,t)
{
K/(1+(K/N0-1)*exp(-r*t))
}
t2 <- seq(0,10,0.1)
plot(t2,logistic(1,100,1,t2),type='l',ylim=c(0,120), xlab="time",ylab="population")
for(n in c(2,5,10,50,100,120))
for(n in c(2,5,10,50,100,120))
{
lines(t2,logistic(1,100,n,t2))
}
col.v <- c('brown','red','orange','green','blue','purple')
#vary N0 (initial number)
N0.v <-c(2,5,10,50,100,120)
plot(0,type='n',xlim=c(0,10),ylim=c(0,100),xlab='t',ylab='N')
for (i in 1:6)
{
lines(t2,logistic(1,100,N0.v[i],t2),col=col.v[i])
}
legend(6,80,paste('N0=',N0.v),col=col.v,lty=2)
r.v = seq(0.05,0.4,0.05)
t3 <- seq(0:140)
1/2-1
plot(0,type='n',xlim=c(0,200),ylim=c(0,500),xlab='t',ylab='N')
for (i in 1:8)
{
lines(t3,logistic(r.v[i],K=500,N0=1,t3),col=rainbow(8)[i])
}
legend(150,370,paste('r=',r.v),col=rainbow(8),lty=1,cex=0.7)
K.v = seq(10,100,10)
t3 <- seq(0:140)
plot(0,type='n',xlim=c(0,200),ylim=c(0,100),xlab='t',ylab='N')
for (i in 1:10)
for (i in 1:10)
{
lines(t3,logistic(r=0.1,K.v[i],N0=1,t3),col=rainbow(10)[i])
}
legend(150,100,paste('K =',K.v),col=rainbow(10),lty=1,cex=0.7)
library(deSolve)
SI.dyn <- function(t,var,par) {
S <- var[1]
I <- var[2]
beta <- par[1]
N<-S+I
dS<--beta*S*I/N
dI<-beta*S*I/N
return(list(c(dS,dI)))
}
beta <- 1
SI.dyn <- function(t,var,par) {
S <- var[1]
I <- var[2]
beta <- par[1]
N<-S+I
dS<--beta*S*I/N
dI<-beta*S*I/N
return(list(c(dS,dI)))
}
beta <- 1
SI.par <- c(beta)
SI.init <- c(99,1)
SI.t <- seq(0,30,by=0.1)
det.sol<-lsoda(SI.init,SI.t,SI.dyn,SI.par)
det.t<-det.sol[,1]
det.S<-det.sol[,2]
det.I<-det.sol[,3]
?lsoda
c(99,1)
plot(0, 0, type='n', xlim=c(0,30),ylim=c(0,100), xlab='time', ylab='infecteds')
points(det.t,det.S,type='l',col='blue',lwd=3)
points(det.t,det.I,type='l',col='red',lwd=3)
legend(locator(1),legend=c("S","I"),col=c('blue','red'),lty=rep(1,2))
